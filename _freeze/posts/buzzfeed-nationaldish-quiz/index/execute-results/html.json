{
  "hash": "274b76cb3897b5a335a58c45f16f46e1",
  "result": {
    "markdown": "---\ntitle: \"Exploring the Culinary Frontier: Using Generative AI to Conquer BuzzFeed's National Dishes Quiz\"\ndescription: \"Another foray into the ease of using Generative AI to complete a Buzzfeed quiz.\"\nauthor: \"Alex Wainwright\"\ndate: 2024-02-18\ntitle-block-banner-color: \"white\"\ncategories:\n  - Generative AI\n  - Buzzfeed\nfreeze: true\n---\n\n## Background\n\nIn the previous post, I showed how Generative AI could be used to complete a Buzzfeed quiz. In the latter example, we answered questions based just on a description alone. The results were impressive, showing how Chat-GPT can easily complete such a quiz with very minor prompting.\n\nIn this post, however, we change things slightly. Instead of typing in an answer into a box, we will present Chat-GPT with four possible answers to select from. We used Buzzfeed's [National Dish](https://www.buzzfeed.com/aglover/national-dish-geography-quiz) quiz for this demonstration.\n\n## How\n\nWe replicate the setup from last time. Using Playwright package to navigate the page to selection questions and responses, and the OpenAI package to interact with Chat-GPT. We're only using Chat-GPT 4 on this occasion, as we previously saw how well it performs relative to Chat-GPT 3.5.\n\nThe only real difference is in what we submit to Chat-GPT:\n\n1.  The prompt now tells Chat-GPT that it will be given a question and four possible answers to choose from.\n\n2.  The message we send to Chat-GPT contains the question and the four possible items.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nfrom dotenv import load_dotenv\nfrom openai import OpenAI\nimport os\nfrom playwright.sync_api import sync_playwright\nimport re\n\nload_dotenv()\n\nif __name__ == \"__main__\":\n\n    client = OpenAI(\n        api_key=os.environ.get(\"OPEN_AI_KEY\"),\n    )\n\n    with sync_playwright() as p:\n        browser = p.chromium.launch(headless=False)\n        page = browser.new_page()\n        page.goto(\n            \"https://www.buzzfeed.com/aglover/national-dish-geography-quiz\")\n        \n        (\n            page\n            .get_by_role(\"button\", name=\"Reject All\")\n            .click()\n        )\n        \n        quiz_elements = (\n            page\n            .locator(\".question__iRCfm\")\n            .all()\n        )\n\n        for quiz_element in quiz_elements:\n            \n            question_text = (\n                quiz_element\n                .locator(\".questionTextTitle__VZVh1\")\n                .inner_text()\n            )\n\n            question_answers = \"\\n\".join(\n                (\n                    quiz_element\n                    .locator(\"li\")\n                    .all_inner_texts()\n                )\n            )\n\n            # Submit Question to Chat-GPT -----------------\n\n            chat_gpt_messages = [\n                {\n                    \"role\": \"system\",\n                    \"content\": \"I'm going to give you a question about national dishes, plus four possible answers. I want you to give me the answer. Provide just the country name, nothing else.\",\n                },\n                {\n                    \"role\": \"user\",\n                    \"content\": f\"{question_text}\\n{question_answers}\"\n                },\n            ]\n\n            chat_completion = client.chat.completions.create(\n                messages=chat_gpt_messages,\n                model=\"gpt-4-0125-preview\",\n            )\n\n            chat_gpt_answer = (\n                chat_completion\n                .model_dump()[\"choices\"][0][\"message\"][\"content\"]\n            )\n            \n            # Select answer based on Chat-GPT response ----\n\n            (\n                quiz_element\n                .locator(\"li\")\n                .filter(\n                    has_text=re.compile(f\"^{chat_gpt_answer}$\")\n                )\n                .click()\n            )\n        \n        (\n            page\n            .locator(\n                \".gradient__R2MwP\"\n            )\n            .screenshot(\n                path=\"output/buzzfeed_national_dish_quiz/chat_gpt_4_scorecard.png\"\n            )\n        )\n```\n:::\n\n\n## Results\n\nAs expected, Chat-GPT 4 does exceedingly well (far better than how I would score). In this case, it scored 8 out of a possible 10 points, placing it in the top 2% of quiz-takers.\n\n![](chat_gpt_4_scorecard.png){fig-align=\"center\"}\n\n## Conclusion\n\nThis is just a fun Buzzfeed quiz, but it reiterates the problem that Generative AI will/is having on assessments. It leaves me wondering how standardised assessments will adapt to the risk that Generative AI poses. Moreover, it raises ethical issues in the use of Generative AI in educational- and recruitment-based contexts. Nevertheless, the models are not perfect. We dropped 2 points in this quiz so Generative AI is not infallible, which means standardized tests won't just see more perfect scores, but the overall performance levels are likely to rise. Perhaps monitoring pass rates over time is required, with a view of identifying spikes in the number of individuals passing.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}